import { createContext, useContext, useEffect, useMemo, useState } from "react";

export type LangCode = "en" | "ml" | "hi" | "mr" | "kn" | "gu" | "te";

type LocaleContextValue = {
  lang: LangCode;
  setLang: (l: LangCode) => void;
  t: (key: string) => string;
};

const LocaleContext = createContext<LocaleContextValue | null>(null);

const STRINGS: Record<LangCode, Record<string, string>> = {
  en: {
    appName: "Krishi Sathi",
    welcome: "Welcome",
    chooseLanguage: "Choose your language",
    english: "English",
    malayalam: "Malayalam",
    hindi: "Hindi",
    mainMenu: "Main Menu",
    askQuestion: "Ask a Question",
    uploadImage: "Upload Image",
    checkUpdates: "Check Updates",
    typeQuestion: "Type your question...",
    speak: "Speak",
    stop: "Stop",
    takePhoto: "Take photo or upload",
    submit: "Submit",
    processing: "Analyzing your request...",
    advisory: "Advisory",
    listen: "Listen",
    saveAdvice: "Save Advice",
    getGuide: "Get Detailed Guide (PDF)",
    askAnother: "Ask Another Question",
    helpful: "Was this advice helpful?",
    yes: "Yes",
    no: "No",
    notifications: "Notifications",
    enableAlerts: "Enable alerts in your language",
    weather: "Weather",
    marketPrices: "Market Prices",
    govtSchemes: "Govt Schemes",
    offline: "Available offline",
    share: "Share",
    copiedToClipboard: "Copied to clipboard!",
    invalidImageFile: "Please select a valid image file",
    imageTooLarge: "Image is too large. Please select an image smaller than 10MB",
  },
  ml: {
    appName: "കൃ���ി സാഥി",
    welcome: "സ്വാഗതം",
    chooseLanguage: "ഭാഷ തിരഞ്ഞെടുക്കുക",
    english: "ഇംഗ്ലീഷ്",
    malayalam: "മലയാളം",
    hindi: "ഹിന്ദി",
    mainMenu: "പ്രധാന മെനു",
    askQuestion: "ചോദ്യം ചോദിക്കുക",
    uploadImage: "ചിത്രം അപ്ലോഡ് ചെയ്യുക",
    checkUpdates: "അപ്ഡേറ്റുകൾ കാണുക",
    typeQuestion: "നിങ്ങളുടെ ചോദ്യം ഇവിടെ എഴുതുക...",
    speak: "സംസാരിക്കുക",
    stop: "നിർത്തുക",
    takePhoto: "ഫോട്ടോ എടുക്കുക അല്ലെങ്കിൽ അപ്ലോഡ് ചെയ്യുക",
    submit: "സമർപ്പിക്കുക",
    processing: "നിങ്ങളുടെ അഭ്യർത്ഥന വിശകലനം ചെയ്യുന്നു...",
    advisory: "സഹായ നിർദ്ദേശം",
    listen: "കേൾക്കുക",
    saveAdvice: "സേവിക്കുക",
    getGuide: "വിശദമായ ഗൈഡ് (PDF)",
    askAnother: "മറ്റൊരു ചോദ്യ��� ചോദിക്കുക",
    helpful: "ഈ നിർദ്ദേശം ഉപകാരപ്പെട്ടോ?",
    yes: "അതെ",
    no: "ഇല്ല",
    notifications: "അറിയിപ്പുകൾ",
    enableAlerts: "നിങ്ങളുടെ ഭാഷയിൽ അലർട്ടുകൾ ലഭ്യമാക്കുക",
    weather: "കാലാവസ്ഥ",
    marketPrices: "വിലവിവരം",
    govtSchemes: "സർക്കാർ പദ്ധതികൾ",
    offline: "ഓഫ്‌ലൈൻ ലഭ്യം",
    share: "പങ്കിടുക",
    copiedToClipboard: "ക്ലിപ്പ്ബോർഡിലേക്ക് കോപ്പി ചെയ്തു!",
  },
  hi: {
    appName: "कृषि साथी",
    welcome: "स्वागत है",
    chooseLanguage: "भाषा चुनें",
    english: "English",
    malayalam: "Malayalam",
    hindi: "हिंदी",
    mainMenu: "मुख्य मेनू",
    askQuestion: "प्रश्न पूछें",
    uploadImage: "छवि अपलोड करें",
    checkUpdates: "अपडेट देखें",
    typeQuestion: "अपना प्रश्न लिखें...",
    speak: "बोलें",
    stop: "रोकें",
    takePhoto: "फोटो लें या अपलोड करें",
    submit: "सबमिट",
    processing: "आप���े अनुरोध का विश्लेषण हो रहा है...",
    advisory: "सलाह",
    listen: "सुनें",
    saveAdvice: "सलाह सहेजें",
    getGuide: "विस्तृत गाइड (PDF)",
    askAnother: "एक और प्रश्न पूछें",
    helpful: "क्या यह सलाह सहायक थी?",
    yes: "हाँ",
    no: "नहीं",
    notifications: "सूचनाएँ",
    enableAlerts: "अपनी भाषा में अलर्ट सक्षम करें",
    weather: "मौसम",
    marketPrices: "बाजार मूल्य",
    govtSchemes: "सरकारी योजनाएँ",
    offline: "ऑफ़लाइन उपलब्ध",
    share: "साझा करें",
    copiedToClipboard: "क्लिपबोर्ड में कॉपी किया गया!",
  },
  mr: {
    appName: "कृषी साथी",
    welcome: "स्वागत",
    chooseLanguage: "भाषा निवडा",
    english: "English",
    malayalam: "Malayalam",
    hindi: "हिंदी",
    mainMenu: "मुख्य मेनू",
    askQuestion: "प्रश्न विचारा",
    uploadImage: "प्रतिमा अपलोड करा",
    checkUpdates: "अपडेट्स पाहा",
    typeQuestion: "तुमचा प्रश्न टाइप करा...",
    speak: "बोला",
    stop: "थांबा",
    takePhoto: "फोटो काढा किंवा अपलोड करा",
    submit: "सबमिट",
    processing: "आपल्या विनंतीचे विश्लेषण चालू...",
    advisory: "सल्ला",
    listen: "ऐका",
    saveAdvice: "सल्ला जतन करा",
    getGuide: "तपशीलवार मार्गदर्शक (PDF)",
    askAnother: "आणखी एक प्रश्न विचारा",
    helpful: "हा सल्ला उपयुक्त होता का?",
    yes: "होय",
    no: "नाही",
    notifications: "सूचना",
    enableAlerts: "तुमच्या भाषेत अलर्ट सक्षम करा",
    weather: "हवामान",
    marketPrices: "बाजारभाव",
    govtSchemes: "शासकीय योजना",
    offline: "ऑफलाइन उपलब्ध",
    share: "शेअर करा",
    copiedToClipboard: "क्लिपबोर्डमध्ये कॉपी केले!",
  },
  kn: {
    appName: "ಕೃಷಿ ಸಾಥಿ",
    welcome: "ಸ್ವಾಗತ",
    chooseLanguage: "ಭಾಷೆ ಆರಿಸಿ",
    english: "English",
    malayalam: "Malayalam",
    hindi: "हिंदी",
    mainMenu: "ಮುಖ್ಯ ಮೆನು",
    askQuestion: "ಪ್ರಶ್ನೆ ಕೇಳಿ",
    uploadImage: "ಚಿತ್ರ ಅಪ್‍ಲೋಡ್ ಮಾಡಿ",
    checkUpdates: "ಅಪ್ಡೇಟ್‍ಗಳನ್ನು ನೋಡಿ",
    typeQuestion: "ನಿಮ್ಮ ಪ್ರಶ್ನೆಯನ್ನು ಟೈಪ್ ಮಾಡಿ...",
    speak: "ಮಾತನಾಡಿ",
    stop: "ನಿಲ್ಲಿಸಿ",
    takePhoto: "ಫೋಟೋ ತೆಗೆಯಿರಿ ಅಥವಾ ಅಪ್‍ಲೋಡ್ ಮಾಡಿ",
    submit: "ಸಲ್ಲಿಸಿ",
    processing: "ನಿಮ್ಮ ವಿನಂತಿ ವಿಶ್ಲೇಷಿಸಲಾಗುತ್ತಿದೆ...",
    advisory: "ಸಲಹೆ",
    listen: "ಕೆಳಿ",
    saveAdvice: "ಸಲಹೆಯನ್ನು ಉಳಿಸಿ",
    getGuide: "ವಿಸ್ತೃತ ಮಾರ್ಗದರ್ಶಿ (PDF)",
    askAnother: "ಇನ್ನೊಂದು ಪ್ರಶ್ನೆ ಕೇಳಿ",
    helpful: "ಈ ಸಲಹೆ ಉಪಯುಕ್ತವಾಗಿತ್ತಾ?",
    yes: "ಹೌದು",
    no: "ಇಲ್ಲ",
    notifications: "ಅಧಿಸೂಚನೆಗಳು",
    enableAlerts: "ನಿಮ್ಮ ಭಾಷೆಯಲ್ಲಿ ಎಚ್ಚರಿಕೆಗಳು",
    weather: "ಹವಾಮಾನ",
    marketPrices: "ಮಾರುಕಟ್ಟೆ ಬೆಲೆಗಳು",
    govtSchemes: "ಸರ್ಕಾರಿ ಯೋಜನೆಗಳು",
    offline: "ಆಫ್‌ಲೈನ್ ಲಭ್ಯ",
    share: "ಹಂಚಿಕೊಳ್ಳಿ",
    copiedToClipboard: "ಕ್ಲಿಪ್‌ಬೋರ್ಡ್‌ಗೆ ಕಾಪಿ ಮಾಡಲಾಗಿದೆ!",
  },
  gu: {
    appName: "કૃષિ સાથી",
    welcome: "સ્વાગત છે",
    chooseLanguage: "ભાષા પસંદ કરો",
    english: "English",
    malayalam: "Malayalam",
    hindi: "हिंदी",
    mainMenu: "મુખ્ય મેનુ",
    askQuestion: "પ્રશ્ન પૂછો",
    uploadImage: "છબી અપલોડ કરો",
    checkUpdates: "અપડેટ્સ જુઓ",
    typeQuestion: "તમારો પ્રશ્ન લખો...",
    speak: "બોલો",
    stop: "બંધ કરો",
    takePhoto: "ફોટો લો અથવા અપલોડ કરો",
    submit: "સબમિટ",
    processing: "તમારી વિનંતિનું વિશ્લેષણ થઈ રહ્યું છે...",
    advisory: "સલાહ",
    listen: "સાંભળો",
    saveAdvice: "સલાહ સાચવો",
    getGuide: "વિગતવાર માર્ગદર્શિકા (PDF)",
    askAnother: "બીજો પ્રશ્ન પૂછો",
    helpful: "શું આ સલાહ ઉપયોગી હતી?",
    yes: "હા",
    no: "ના",
    notifications: "સૂચનાઓ",
    enableAlerts: "તમારી ભાષામાં એલર્ટ સક્ષમ કરો",
    weather: "હવામાન",
    marketPrices: "બજાર ભાવ",
    govtSchemes: "સરકારી યોજનાઓ",
    offline: "ઓફલાઈન ઉપલબ્ધ",
    share: "શેર કરો",
    copiedToClipboard: "ક્લિપબોર્ડમાં કૉપિ થયું!",
  },
  te: {
    appName: "కృషి సాథి",
    welcome: "స్వాగతం",
    chooseLanguage: "భాషను ఎంచుకోండి",
    english: "English",
    malayalam: "Malayalam",
    hindi: "हिंदी",
    mainMenu: "ప్రధాన మెను",
    askQuestion: "ప్రశ్న అడగండి",
    uploadImage: "చిత్రాన్ని అప్లోడ్ చేయండి",
    checkUpdates: "అప్డేట్లు చూడండి",
    typeQuestion: "మీ ప్రశ్నను టైప్ చేయండి...",
    speak: "మాట్లాడండి",
    stop: "ఆపు",
    takePhoto: "ఫోటో తీయండి లేదా అప్లోడ్ చేయండి",
    submit: "సబ్మిట్",
    processing: "మీ అభ్యర్థన విశ్లేషణలో ఉంది...",
    advisory: "సలహా",
    listen: "వినండి",
    saveAdvice: "సలహాను సేవ్ చేయండి",
    getGuide: "వివరణాత్మక గైడ్ (PDF)",
    askAnother: "మరొక ప్రశ్న అడగండి",
    helpful: "ఈ సలహా ఉపయోగపడిందా?",
    yes: "అవును",
    no: "కాదు",
    notifications: "నోటిఫికేషన్లు",
    enableAlerts: "మీ భాషలో అలర్ట్‌లు",
    weather: "వాతావరణం",
    marketPrices: "మార్కెట్ ధరలు",
    govtSchemes: "ప్రభుత్వ పథకాలు",
    offline: "ఆఫ్‌లైన్ అందుబాటులో",
    share: "షేర్ చేయండి",
    copiedToClipboard: "క్లిప్‌బోర్డ్‌కు కాపీ చేయబడింది!",
  },
};

export function LocaleProvider({ children }: { children: React.ReactNode }) {
  const [lang, setLangState] = useState<LangCode>("en");

  useEffect(() => {
    const saved = localStorage.getItem("lang");
    const allowed = ["en","ml","hi","mr","kn","gu","te"] as const;
    if (saved && (allowed as readonly string[]).includes(saved)) {
      setLangState(saved as LangCode);
    }
  }, []);

  const setLang = (l: LangCode) => {
    setLangState(l);
    localStorage.setItem("lang", l);
  };

  const t = (key: string) => STRINGS[lang][key] ?? key;

  const value = useMemo(() => ({ lang, setLang, t }), [lang]);

  return <LocaleContext.Provider value={value}>{children}</LocaleContext.Provider>;
}

export function useLocale() {
  const ctx = useContext(LocaleContext);
  if (!ctx) throw new Error("useLocale must be used within LocaleProvider");
  return ctx;
}
